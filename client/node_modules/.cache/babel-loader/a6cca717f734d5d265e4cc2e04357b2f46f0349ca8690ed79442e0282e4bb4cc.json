{"ast":null,"code":"import { GET_ALL_BREED, GET_DETAIL, GET_TEMPERAMENT, SEARCH_FOR_NAME, ORDER_FOR_NAME_AZ, ORDER_FOR_NAME_ZA, FILTER_CREATE, ORDER_BY_TEMPERAMENT, ORDER_BY_PESO_MIN, ORDER_BY_PESO_MAX, POST_BREED } from \"./actions\";\nconst inicialState = {\n  breed: [],\n  breedAll: [],\n  breedDetail: [],\n  temperaments: []\n};\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : inicialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_ALL_BREED:\n      return {\n        ...state,\n        breed: action.payload,\n        breedAll: action.payload\n      };\n\n    // case GET_TEMPERAMENT:\n    //     return {\n    //       ...state,\n    //         temperaments: action.payload\n    //     };\n    // case GET_DETAIL:\n    //     return {\n    //      ...state,\n    //         breedDetail: action.payload\n    //     };\n    // case SEARCH_FOR_NAME:\n    //     return {\n    //     ...state,\n    //         breed: action.payload\n    //     };\n    //     case POST_BREED:\n    //         return{\n    //             ...state\n    //         };\n    //     case ORDER_FOR_NAME_AZ:\n    //         let resultAZ = state.breedAll.sort(function(a, b){\n    //             if (a.name > b.name) return 1;\n    //             if (a.name < b.name) return -1;\n    //             return 0;\n    //         });\n    //         return {\n    //             ...state,\n    //             breed: resultAZ\n    //         }\n    //     case ORDER_FOR_NAME_ZA:\n    //         let resultZA = state.breedAll.sort(function(a, b){\n    //             if (a.name > b.name) return -1;\n    //             if (a.name < b.name) return 1;\n    //             return 0;\n    //         });\n    //         return {\n    //             ...state,\n    //             breed: resultZA\n    //         };\n\n    //         case FILTER_CREATE:\n    //             const createdFilter = action.payload === 'Creadas'? state.breedAll.filter(el => el.createdInDb) : state.breedAll.filter(el=>!el.createdInDb)\n\n    //             return {\n    //                 ...state,\n    //                 breed: createdFilter\n    //             };\n\n    //         case ORDER_BY_TEMPERAMENT: \n    //             const filterTemp = state.breedAll.filter(dog => {\n    //                 if (!dog.temperament) return undefined;\n    //                 return dog.temperament.includes(action.payload)\n    //             })\n    //             console.log (filterTemp)\n    //             return {\n    //                 ...state,\n    //                 breed: filterTemp\n    //             }\n    //             case ORDER_BY_PESO_MIN:\n\n    //             let resultsMin = state.breedAll.sort((a,b) => parseInt(a.weight.split(\" - \")[0]) - parseInt(b.weight.split(\" - \")[0]))\n    //             let resultmin1 = resultsMin.sort((a,b)=> {\n    //                 if (parseInt(a.weight.split(\" - \")[0]) === parseInt(b.weight.split(\" - \")[0])) {\n    //                     return parseInt(a.weight.split(\" - \")[1]) - parseInt(b.weight.split(\" - \")[1])\n    //                 } else return 0;\n    //             } )\n\n    //                 return {\n    //                     ...state,\n    //                     breed: resultmin1 \n    //                 }\n    //             case ORDER_BY_PESO_MAX:\n    //                 let resultsMax = state.raceAll.sort((a,b) => parseInt(b.weight.split(\" - \")[0]) - parseInt(a.weight.split(\" - \")[0]))\n    //                 let resultMax1 = resultsMax.sort((a,b)=> {\n    //                 if (parseInt(b.weight.split(\" - \")[0]) === parseInt(a.weight.split(\" - \")[0])) {\n    //                     return parseInt(b.weight.split(\" - \")[1]) - parseInt(a.weight.split(\" - \")[1])\n    //                 } else return 0;\n    //             } )\n\n    //                 console.log(resultsMax)\n    //                 return {\n    //                     ...state,\n    //                     breed: resultMax1\n    //                 };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["GET_ALL_BREED","GET_DETAIL","GET_TEMPERAMENT","SEARCH_FOR_NAME","ORDER_FOR_NAME_AZ","ORDER_FOR_NAME_ZA","FILTER_CREATE","ORDER_BY_TEMPERAMENT","ORDER_BY_PESO_MIN","ORDER_BY_PESO_MAX","POST_BREED","inicialState","breed","breedAll","breedDetail","temperaments","rootReducer","state","arguments","length","undefined","action","type","payload"],"sources":["/home/emamanriquez/Escritorio/PI-Dogs/client/src/Redux/reducer.js"],"sourcesContent":["import { GET_ALL_BREED, GET_DETAIL, GET_TEMPERAMENT, SEARCH_FOR_NAME,ORDER_FOR_NAME_AZ, ORDER_FOR_NAME_ZA,FILTER_CREATE, \n    ORDER_BY_TEMPERAMENT, ORDER_BY_PESO_MIN, ORDER_BY_PESO_MAX, POST_BREED} from \"./actions\";\n\n\n    const inicialState = {\n        breed: [],\n        breedAll: [],\n        breedDetail: [],\n        temperaments: [],\n    };\n\n    const rootReducer = (state = inicialState, action) => {\n\n    switch (action.type) {\n        case GET_ALL_BREED:\n            return {\n              ...state,\n                breed: action.payload,\n                breedAll: action.payload\n            };\n            \n        // case GET_TEMPERAMENT:\n        //     return {\n        //       ...state,\n        //         temperaments: action.payload\n        //     };\n        // case GET_DETAIL:\n        //     return {\n        //      ...state,\n        //         breedDetail: action.payload\n        //     };\n        // case SEARCH_FOR_NAME:\n        //     return {\n        //     ...state,\n        //         breed: action.payload\n        //     };\n        //     case POST_BREED:\n        //         return{\n        //             ...state\n        //         };\n        //     case ORDER_FOR_NAME_AZ:\n        //         let resultAZ = state.breedAll.sort(function(a, b){\n        //             if (a.name > b.name) return 1;\n        //             if (a.name < b.name) return -1;\n        //             return 0;\n        //         });\n        //         return {\n        //             ...state,\n        //             breed: resultAZ\n        //         }\n        //     case ORDER_FOR_NAME_ZA:\n        //         let resultZA = state.breedAll.sort(function(a, b){\n        //             if (a.name > b.name) return -1;\n        //             if (a.name < b.name) return 1;\n        //             return 0;\n        //         });\n        //         return {\n        //             ...state,\n        //             breed: resultZA\n        //         };\n\n    \n        //         case FILTER_CREATE:\n        //             const createdFilter = action.payload === 'Creadas'? state.breedAll.filter(el => el.createdInDb) : state.breedAll.filter(el=>!el.createdInDb)\n            \n        //             return {\n        //                 ...state,\n        //                 breed: createdFilter\n        //             };\n                    \n        //         case ORDER_BY_TEMPERAMENT: \n        //             const filterTemp = state.breedAll.filter(dog => {\n        //                 if (!dog.temperament) return undefined;\n        //                 return dog.temperament.includes(action.payload)\n        //             })\n        //             console.log (filterTemp)\n        //             return {\n        //                 ...state,\n        //                 breed: filterTemp\n        //             }\n        //             case ORDER_BY_PESO_MIN:\n                    \n        //             let resultsMin = state.breedAll.sort((a,b) => parseInt(a.weight.split(\" - \")[0]) - parseInt(b.weight.split(\" - \")[0]))\n        //             let resultmin1 = resultsMin.sort((a,b)=> {\n        //                 if (parseInt(a.weight.split(\" - \")[0]) === parseInt(b.weight.split(\" - \")[0])) {\n        //                     return parseInt(a.weight.split(\" - \")[1]) - parseInt(b.weight.split(\" - \")[1])\n        //                 } else return 0;\n        //             } )\n        \n        //                 return {\n        //                     ...state,\n        //                     breed: resultmin1 \n        //                 }\n        //             case ORDER_BY_PESO_MAX:\n        //                 let resultsMax = state.raceAll.sort((a,b) => parseInt(b.weight.split(\" - \")[0]) - parseInt(a.weight.split(\" - \")[0]))\n        //                 let resultMax1 = resultsMax.sort((a,b)=> {\n        //                 if (parseInt(b.weight.split(\" - \")[0]) === parseInt(a.weight.split(\" - \")[0])) {\n        //                     return parseInt(b.weight.split(\" - \")[1]) - parseInt(a.weight.split(\" - \")[1])\n        //                 } else return 0;\n        //             } )\n                        \n        //                 console.log(resultsMax)\n        //                 return {\n        //                     ...state,\n        //                     breed: resultMax1\n        //                 };\n                    default: return {...state}\n            }\n        }\n        \n        export default rootReducer;"],"mappings":"AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,eAAe,EAAEC,eAAe,EAACC,iBAAiB,EAAEC,iBAAiB,EAACC,aAAa,EACnHC,oBAAoB,EAAEC,iBAAiB,EAAEC,iBAAiB,EAAEC,UAAU,QAAO,WAAW;AAGxF,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE,EAAE;EACZC,WAAW,EAAE,EAAE;EACfC,YAAY,EAAE;AAClB,CAAC;AAED,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGP,YAAY;EAAA,IAAEU,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAEjD,QAAQC,MAAM,CAACC,IAAI;IACf,KAAKtB,aAAa;MACd,OAAO;QACL,GAAGiB,KAAK;QACNL,KAAK,EAAES,MAAM,CAACE,OAAO;QACrBV,QAAQ,EAAEQ,MAAM,CAACE;MACrB,CAAC;;IAEL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAGA;IACA;;IAEA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACY;MAAS,OAAO;QAAC,GAAGN;MAAK,CAAC;EAAA;AAEtC,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}