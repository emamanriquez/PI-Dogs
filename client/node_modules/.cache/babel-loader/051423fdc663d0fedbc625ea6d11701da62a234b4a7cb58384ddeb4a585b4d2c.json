{"ast":null,"code":"import { GET_ALL_BREED, GET_DETAIL, GET_TEMPERAMENT, SEARCH_FOR_NAME, ORDER_FOR_NAME_AZ, ORDER_FOR_NAME_ZA, FILTER_CREATE, ORDER_BY_TEMPERAMENT, ORDER_BY_PESO_MIN, ORDER_BY_PESO_MAX, POST_BREED } from \"./actions\";\nconst inicialState = {\n  breed: [],\n  breedAll: [],\n  breedDetail: [],\n  temperaments: []\n};\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : inicialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(Action);\n  switch (action.type) {\n    case GET_ALL_BREED:\n      return {\n        ...state,\n        breed: action.payload,\n        breedAll: action.payload\n      };\n    case GET_TEMPERAMENT:\n      return {\n        ...state,\n        temperaments: action.payload\n      };\n    case GET_DETAIL:\n      return {\n        ...state,\n        breedDetail: action.payload\n      };\n    case SEARCH_FOR_NAME:\n      return {\n        ...state,\n        breed: action.payload\n      };\n    case POST_BREED:\n      return {\n        ...state\n      };\n    case ORDER_FOR_NAME_AZ:\n      let resultAZ = state.breedAll.sort(function (a, b) {\n        if (a.name > b.name) return 1;\n        if (a.name < b.name) return -1;\n        return 0;\n      });\n      return {\n        ...state,\n        breed: resultAZ\n      };\n    case ORDER_FOR_NAME_ZA:\n      let resultZA = state.breedAll.sort(function (a, b) {\n        if (a.name > b.name) return -1;\n        if (a.name < b.name) return 1;\n        return 0;\n      });\n      return {\n        ...state,\n        breed: resultZA\n      };\n    case FILTER_CREATE:\n      const createdFilter = action.payload === 'Creadas' ? state.breedAll.filter(el => el.createdInDb) : state.breedAll.filter(el => !el.createdInDb);\n      return {\n        ...state,\n        breed: createdFilter\n      };\n    case ORDER_BY_TEMPERAMENT:\n      const filterTemp = state.breedAll.filter(dog => {\n        if (!dog.temperament) return undefined;\n        return dog.temperament.includes(action.payload);\n      });\n      console.log(filterTemp);\n      return {\n        ...state,\n        breed: filterTemp\n      };\n    case ORDER_BY_PESO_MIN:\n      let resultsMin = state.breedAll.sort((a, b) => parseInt(a.weight.split(\" - \")[0]) - parseInt(b.weight.split(\" - \")[0]));\n      let resultmin1 = resultsMin.sort((a, b) => {\n        if (parseInt(a.weight.split(\" - \")[0]) === parseInt(b.weight.split(\" - \")[0])) {\n          return parseInt(a.weight.split(\" - \")[1]) - parseInt(b.weight.split(\" - \")[1]);\n        } else return 0;\n      });\n      return {\n        ...state,\n        breed: resultmin1\n      };\n    case ORDER_BY_PESO_MAX:\n      let resultsMax = state.breedAll.sort((a, b) => parseInt(b.weight.split(\" - \")[0]) - parseInt(a.weight.split(\" - \")[0]));\n      let resultMax1 = resultsMax.sort((a, b) => {\n        if (parseInt(b.weight.split(\" - \")[0]) === parseInt(a.weight.split(\" - \")[0])) {\n          return parseInt(b.weight.split(\" - \")[1]) - parseInt(a.weight.split(\" - \")[1]);\n        } else return 0;\n      });\n      console.log(resultsMax);\n      return {\n        ...state,\n        breed: resultMax1\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["GET_ALL_BREED","GET_DETAIL","GET_TEMPERAMENT","SEARCH_FOR_NAME","ORDER_FOR_NAME_AZ","ORDER_FOR_NAME_ZA","FILTER_CREATE","ORDER_BY_TEMPERAMENT","ORDER_BY_PESO_MIN","ORDER_BY_PESO_MAX","POST_BREED","inicialState","breed","breedAll","breedDetail","temperaments","rootReducer","state","arguments","length","undefined","action","console","log","Action","type","payload","resultAZ","sort","a","b","name","resultZA","createdFilter","filter","el","createdInDb","filterTemp","dog","temperament","includes","resultsMin","parseInt","weight","split","resultmin1","resultsMax","resultMax1"],"sources":["/home/emamanriquez/Escritorio/PI-Dogs/client/src/Redux/reducer.js"],"sourcesContent":["import { GET_ALL_BREED, GET_DETAIL, GET_TEMPERAMENT, SEARCH_FOR_NAME,ORDER_FOR_NAME_AZ, ORDER_FOR_NAME_ZA,FILTER_CREATE, \n    ORDER_BY_TEMPERAMENT, ORDER_BY_PESO_MIN, ORDER_BY_PESO_MAX, POST_BREED} from \"./actions\";\n\n\n    const inicialState = {\n        breed: [],\n        breedAll: [],\n        breedDetail: [],\n        temperaments: [],\n    };\n\n    const rootReducer = (state = inicialState, action) => {\nconsole.log(Action)\n    switch (action.type) {\n        case GET_ALL_BREED:\n            return {\n              ...state,\n                breed: action.payload,\n                breedAll: action.payload\n            };\n            \n        case GET_TEMPERAMENT:\n            return {\n              ...state,\n                temperaments: action.payload\n            };\n        case GET_DETAIL:\n            return {\n             ...state,\n                breedDetail: action.payload\n            };\n        case SEARCH_FOR_NAME:\n            return {\n            ...state,\n                breed: action.payload\n            };\n            case POST_BREED:\n                return{\n                    ...state\n                };\n            case ORDER_FOR_NAME_AZ:\n                let resultAZ = state.breedAll.sort(function(a, b){\n                    if (a.name > b.name) return 1;\n                    if (a.name < b.name) return -1;\n                    return 0;\n                });\n                return {\n                    ...state,\n                    breed: resultAZ\n                }\n            case ORDER_FOR_NAME_ZA:\n                let resultZA = state.breedAll.sort(function(a, b){\n                    if (a.name > b.name) return -1;\n                    if (a.name < b.name) return 1;\n                    return 0;\n                });\n                return {\n                    ...state,\n                    breed: resultZA\n                };\n\n    \n                case FILTER_CREATE:\n                    const createdFilter = action.payload === 'Creadas'? state.breedAll.filter(el => el.createdInDb) : state.breedAll.filter(el=>!el.createdInDb)\n            \n                    return {\n                        ...state,\n                        breed: createdFilter\n                    };\n                    \n                case ORDER_BY_TEMPERAMENT: \n                    const filterTemp = state.breedAll.filter(dog => {\n                        if (!dog.temperament) return undefined;\n                        return dog.temperament.includes(action.payload)\n                    })\n                    console.log (filterTemp)\n                    return {\n                        ...state,\n                        breed: filterTemp\n                    }\n                    case ORDER_BY_PESO_MIN:\n                    \n                    let resultsMin = state.breedAll.sort((a,b) => parseInt(a.weight.split(\" - \")[0]) - parseInt(b.weight.split(\" - \")[0]))\n                    let resultmin1 = resultsMin.sort((a,b)=> {\n                        if (parseInt(a.weight.split(\" - \")[0]) === parseInt(b.weight.split(\" - \")[0])) {\n                            return parseInt(a.weight.split(\" - \")[1]) - parseInt(b.weight.split(\" - \")[1])\n                        } else return 0;\n                    } )\n        \n                        return {\n                            ...state,\n                            breed: resultmin1 \n                        }\n                    case ORDER_BY_PESO_MAX:\n                        let resultsMax = state.breedAll.sort((a,b) => parseInt(b.weight.split(\" - \")[0]) - parseInt(a.weight.split(\" - \")[0]))\n                        let resultMax1 = resultsMax.sort((a,b)=> {\n                        if (parseInt(b.weight.split(\" - \")[0]) === parseInt(a.weight.split(\" - \")[0])) {\n                            return parseInt(b.weight.split(\" - \")[1]) - parseInt(a.weight.split(\" - \")[1])\n                        } else return 0;\n                    } )\n                        \n                        console.log(resultsMax)\n                        return {\n                            ...state,\n                            breed: resultMax1\n                        };\n                    default: \n                    return {...state}\n            }\n        }\n        \n        export default rootReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}