{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { postRace } from \"../../Redux/actions\";\nconst initialForm = {\n  name: \"\",\n  min__height: \"\",\n  max__height: \"\",\n  min__weight: \"\",\n  max__weight: \"\",\n  life__span: \"\",\n  temperament: []\n};\nconst validateForm = form => {\n  let errors = {};\n  if (!form.name) {\n    errors.name = \"You must complete the 'Name' field.\";\n  } else if (!/[a-zA-Z\\s]/.test(form.name)) {\n    errors.name = \"The 'Name' field allows only letters.\";\n  } else if (!form.min__height) {\n    errors.min__height = \"You must complete the 'Min height' field.\";\n  } else if (!form.max__height) {\n    errors.max__height = \"You must complete the 'Max height' field.\";\n  } else if (!form.min__weight) {\n    errors.min__weight = \"You must complete the 'Min weight' field.\";\n  } else if (!form.max__weight) {\n    errors.max__weight = \"You must complete the 'Max weight' field.\";\n  } else if (!form.life__span) {\n    errors.life__span = \"You must complete the 'Life span' field.\";\n  } else if (form.temperament.length === 0) {\n    errors.temperament = \"You must complete the 'Temperament' field.\";\n  }\n  return errors;\n};\nexport const useForm = () => {\n  _s();\n  const [form, setForm] = useState(initialForm);\n  const [errors, setErrors] = useState({});\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    name === \"temperament\" ? setForm({\n      ...form,\n      temperament: [...form.temperament, value]\n    }) : setForm({\n      ...form,\n      [name]: value\n    });\n  };\n  const handleBlur = event => {\n    handleChange(event);\n    setErrors(validateForm(form));\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    setErrors(validateForm(form));\n\n    // Controlo si existen errores\n    if (Object.values(errors).length > 0) {\n      alert(\"Please complete the information required\");\n    } else if (form.name === \"\" || form.min__height === \"\" || form.max__height === \"\" || form.min__weight === \"\" || form.max__weight === \"\" || !form.temperament.length) {\n      alert(\"Please complete the form\");\n    } else {\n      dispatch(postRace(form));\n      alert(\"Breed created\");\n      setForm(initialForm);\n      navigate(\"/home\");\n    }\n  };\n  const handleDelete = input => {\n    setForm({\n      ...form,\n      temperament: form.temperament.filter(temperament => temperament !== input)\n    });\n  };\n  return {\n    form,\n    errors,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    handleDelete\n  };\n};\n_s(useForm, \"7y9aVH+glMxzS7BMJcTFUrplgMQ=\", false, function () {\n  return [useDispatch, useNavigate];\n});","map":{"version":3,"names":["useState","useDispatch","useNavigate","postRace","initialForm","name","min__height","max__height","min__weight","max__weight","life__span","temperament","validateForm","form","errors","test","length","useForm","_s","setForm","setErrors","dispatch","navigate","handleChange","event","value","target","handleBlur","handleSubmit","preventDefault","Object","values","alert","handleDelete","input","filter"],"sources":["/home/emamanriquez/Escritorio/PI-Dogs/client/src/pages/createBreed/useForm.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { postRace } from \"../../Redux/actions\";\n\nconst initialForm = {\n  name: \"\",\n  min__height: \"\",\n  max__height: \"\",\n  min__weight: \"\",\n  max__weight: \"\",\n  life__span: \"\",\n  temperament: [],\n};\n\nconst validateForm = (form) => {\n  let errors = {};\n  if (!form.name) {\n    errors.name = \"You must complete the 'Name' field.\";\n  } else if (!/[a-zA-Z\\s]/.test(form.name)) {\n    errors.name = \"The 'Name' field allows only letters.\";\n  } else if (!form.min__height) {\n    errors.min__height = \"You must complete the 'Min height' field.\";\n  } else if (!form.max__height) {\n    errors.max__height = \"You must complete the 'Max height' field.\";\n  } else if (!form.min__weight) {\n    errors.min__weight = \"You must complete the 'Min weight' field.\";\n  } else if (!form.max__weight) {\n    errors.max__weight = \"You must complete the 'Max weight' field.\";\n  } else if (!form.life__span) {\n    errors.life__span = \"You must complete the 'Life span' field.\";\n  } else if (form.temperament.length === 0) {\n    errors.temperament = \"You must complete the 'Temperament' field.\";\n  }\n  return errors;\n};\n\nexport const useForm = () => {\n  const [form, setForm] = useState(initialForm);\n  const [errors, setErrors] = useState({});\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    name === \"temperament\"\n      ? setForm({\n          ...form,\n          temperament: [...form.temperament, value],\n        })\n      : setForm({\n          ...form,\n          [name]: value,\n        });\n  };\n\n  const handleBlur = (event) => {\n    handleChange(event);\n    setErrors(validateForm(form));\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setErrors(validateForm(form));\n\n    // Controlo si existen errores\n    if (Object.values(errors).length > 0) {\n      alert(\"Please complete the information required\");\n    } else if (\n      form.name === \"\" ||\n      form.min__height === \"\" ||\n      form.max__height === \"\" ||\n      form.min__weight === \"\" ||\n      form.max__weight === \"\" ||\n      !form.temperament.length\n    ) {\n      alert(\"Please complete the form\");\n    } else {\n      dispatch(postRace(form));\n      alert(\"Breed created\");\n      setForm(initialForm);\n      navigate(\"/home\");\n    }\n  };\n\n  const handleDelete = (input) => {\n    setForm({\n      ...form,\n      temperament: form.temperament.filter(\n        (temperament) => temperament !== input\n      ),\n    });\n  };\n\n  return {\n    form,\n    errors,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    handleDelete,\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}