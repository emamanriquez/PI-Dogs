{"ast":null,"code":"var _jsxFileName = \"/home/emamanriquez/Escritorio/PI-Dogs/client/src/pages/home/Card/cards.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"./card.jsx\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getAllRace } from \"../../../Redux/actions\";\nimport \"../..\";\nimport Paginado from \"../../../components/paginado/paginado\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cards() {\n  _s();\n  const dispatch = useDispatch(); //es para usas esa cosntante e ir despachando mis acciones, envía la info al reducer\n  const estadoCard = useSelector(state => state.races); //esta cosntante trae todo lo que está en el estado de races. Ya lo tenemos disponible\n\n  //paginado\n  const [currentPage, setCurrentPage] = useState(1);\n  const [cardsPerPage, setCardsPerPag] = useState(8);\n  const indexOfLastCards = currentPage * cardsPerPage;\n  const indexOfFirstCards = indexOfLastCards - cardsPerPage;\n  const currentCards = estadoCard.slice(indexOfFirstCards, indexOfLastCards);\n  const Paginado = pagNumber => {\n    setCurrentPage(pagNumber);\n  };\n  useEffect(() => {\n    //trae del estado las razas cuando el componente se monta\n    dispatch(getAllRace());\n  }, [dispatch]); //esta última parate es para que no se genere un bucle infinito de llamados, como no depende de nada el dispatch se lo podría sacar.\n\n  // ver si puedo agragar una imagen randon para no tenerla que poner en el render del detail\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ordenPaginado\",\n      children: /*#__PURE__*/_jsxDEV(Paginado, {\n        cardsPerPage: cardsPerPage,\n        estadoCard: estadoCard.length,\n        paginado: Paginado\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ordenCards\",\n      children: currentCards.map(dogRace => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/detail/\" + dogRace.id,\n            className: \"sinlinea\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              image: dogRace.image,\n              name: dogRace.name,\n              temperament: dogRace.temperament,\n              weight: dogRace.weight\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 28\n          }, this)\n        }, dogRace.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 8\n  }, this);\n}\n_s(Cards, \"PAAMQN3tIt1d5y5qlcTBvy+vLVY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Cards;\n;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useEffect","useState","Card","useSelector","useDispatch","getAllRace","Paginado","Link","jsxDEV","_jsxDEV","Cards","_s","dispatch","estadoCard","state","races","currentPage","setCurrentPage","cardsPerPage","setCardsPerPag","indexOfLastCards","indexOfFirstCards","currentCards","slice","pagNumber","children","className","length","paginado","fileName","_jsxFileName","lineNumber","columnNumber","map","dogRace","to","id","image","name","temperament","weight","_c","$RefreshReg$"],"sources":["/home/emamanriquez/Escritorio/PI-Dogs/client/src/pages/home/Card/cards.jsx"],"sourcesContent":["import React, {useEffect,useState} from \"react\";\nimport Card from \"./card.jsx\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getAllRace } from \"../../../Redux/actions\";\nimport \"../..\";\nimport Paginado from \"../../../components/paginado/paginado\";\nimport { Link } from \"react-router-dom\";\n\n\nexport default function Cards () {\n    const dispatch = useDispatch(); //es para usas esa cosntante e ir despachando mis acciones, envía la info al reducer\n    const estadoCard = useSelector(state => state.races); //esta cosntante trae todo lo que está en el estado de races. Ya lo tenemos disponible\n\n    //paginado\n    const [currentPage, setCurrentPage] = useState(1);\n    const[cardsPerPage, setCardsPerPag ] = useState (8);\n    const indexOfLastCards = currentPage * cardsPerPage;\n    const indexOfFirstCards = indexOfLastCards - cardsPerPage;\n    const currentCards = estadoCard.slice(indexOfFirstCards,indexOfLastCards)\n\n    const Paginado = (pagNumber) => {\n        setCurrentPage(pagNumber)\n    }\n \n    useEffect (()=> {                   //trae del estado las razas cuando el componente se monta\n      dispatch (getAllRace())\n    }, [dispatch]) //esta última parate es para que no se genere un bucle infinito de llamados, como no depende de nada el dispatch se lo podría sacar.\n\n    // ver si puedo agragar una imagen randon para no tenerla que poner en el render del detail\n    return (\n       \n       <div>\n           <div className=\"ordenPaginado\">\n           <Paginado  cardsPerPage={cardsPerPage} estadoCard= {estadoCard.length} paginado = {Paginado} />\n           </div>\n          \n            <div className=\"ordenCards\">\n            {currentCards.map( (dogRace) => {\n                   return (\n                       <div key={dogRace.id} >\n                           <Link to= {\"/detail/\" + dogRace.id} className=\"sinlinea\">\n                              <Card  image={dogRace.image} name={dogRace.name} temperament={dogRace.temperament} weight={dogRace.weight} /> \n                           </Link>\n                       </div>\n                   )}               \n               )}           \n            </div>\n       \n        </div>\n        \n    );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAACC,QAAQ,QAAO,OAAO;AAC/C,OAAOC,IAAI,MAAM,YAAY;AAC7B,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,wBAAwB;AACnD,OAAO,OAAO;AACd,OAAOC,QAAQ,MAAM,uCAAuC;AAC5D,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,eAAe,SAASC,KAAKA,CAAA,EAAI;EAAAC,EAAA;EAC7B,MAAMC,QAAQ,GAAGR,WAAW,EAAE,CAAC,CAAC;EAChC,MAAMS,UAAU,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,KAAK,CAAC,CAAC,CAAC;;EAEtD;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAK,CAACiB,YAAY,EAAEC,cAAc,CAAE,GAAGlB,QAAQ,CAAE,CAAC,CAAC;EACnD,MAAMmB,gBAAgB,GAAGJ,WAAW,GAAGE,YAAY;EACnD,MAAMG,iBAAiB,GAAGD,gBAAgB,GAAGF,YAAY;EACzD,MAAMI,YAAY,GAAGT,UAAU,CAACU,KAAK,CAACF,iBAAiB,EAACD,gBAAgB,CAAC;EAEzE,MAAMd,QAAQ,GAAIkB,SAAS,IAAK;IAC5BP,cAAc,CAACO,SAAS,CAAC;EAC7B,CAAC;EAEDxB,SAAS,CAAE,MAAK;IAAoB;IAClCY,QAAQ,CAAEP,UAAU,EAAE,CAAC;EACzB,CAAC,EAAE,CAACO,QAAQ,CAAC,CAAC,EAAC;;EAEf;EACA,oBAEGH,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAKiB,SAAS,EAAC,eAAe;MAAAD,QAAA,eAC9BhB,OAAA,CAACH,QAAQ;QAAEY,YAAY,EAAEA,YAAa;QAACL,UAAU,EAAGA,UAAU,CAACc,MAAO;QAACC,QAAQ,EAAItB;MAAS;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzF,eAELvB,OAAA;MAAKiB,SAAS,EAAC,YAAY;MAAAD,QAAA,EAC1BH,YAAY,CAACW,GAAG,CAAGC,OAAO,IAAK;QACzB,oBACIzB,OAAA;UAAAgB,QAAA,eACIhB,OAAA,CAACF,IAAI;YAAC4B,EAAE,EAAG,UAAU,GAAGD,OAAO,CAACE,EAAG;YAACV,SAAS,EAAC,UAAU;YAAAD,QAAA,eACrDhB,OAAA,CAACP,IAAI;cAAEmC,KAAK,EAAEH,OAAO,CAACG,KAAM;cAACC,IAAI,EAAEJ,OAAO,CAACI,IAAK;cAACC,WAAW,EAAEL,OAAO,CAACK,WAAY;cAACC,MAAM,EAAEN,OAAO,CAACM;YAAO;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAG;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACzG,GAHDE,OAAO,CAACE,EAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAId;MACT,CAAC;IACL;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEJ;AAGd;AAACrB,EAAA,CA1CuBD,KAAK;EAAA,QACRN,WAAW,EACTD,WAAW;AAAA;AAAAsC,EAAA,GAFV/B,KAAK;AA0C5B;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}